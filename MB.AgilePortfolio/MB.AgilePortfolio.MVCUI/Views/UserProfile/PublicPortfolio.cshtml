@model MB.AgilePortfolio.MVCUI.ViewModels.UserProfile

@{
    if (Model.Portfolio.Id != Guid.Empty)
    {
        ViewBag.Title = Model.Portfolio.Name;
    }
    else
    {
        ViewBag.Title = "Profile Not Found";
    }
}



@if (Model.Portfolio.Id == Guid.Empty)
{
    //Profile not found.
    <div class=" container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h1 class="display-2 text-center">- Portfolio Not Found -</h1>

            </div>
        </div>
    </div>
}
else
{

    using (Html.BeginForm())
    {


        @Html.AntiForgeryToken()
        <!DOCTYPE html>

        <html>
        <head>
            <meta name="viewport" content="width=device-width" />
            <script src="~/scripts/jquery-3.3.1.min.js"></script>
            <script src="~/scripts/bootstrap.min.js"></script>
            <script src="~/scripts/jquery.dataTables.min.js"></script>
            <script src="~/scripts/dataTables.bootstrap4.min.js"></script>
            <script type="text/javascript">
                $(document).ready(function () {
                    $("#dataTable").dataTable();
                });
            </script>
            <style>
                .carousel-inner img {
                    width: 100px;
                    height: 100px;
                }

                .carousel-inner {
                    padding-left: 10%;
                    padding-right: 10%;
                    width: 100%;
                }
            </style>


        </head>

        <body>
            <h2 align="center">@Model.Portfolio.Name</h2>
            <div class="container py-4" style="text-align:center">
                <img src="~/@Model.Portfolio.PortfolioImage" alt="" style="width:100%;height:350px; text-align:center; object-fit:contain;">
            </div>
            <hr />
            <h4 align="center">Projects</h4>
            <div class="form-horizontal">
                <div id="demo" class="carousel slide" data-ride="carousel">
                    <ul class="carousel-indicators"></ul>
                    <div id="demo" class="carousel slide" data-ride="carousel">
                        <ul class="carousel-indicators">

                            @{
                                int i = 0;
                                int imgleft = Model.Projects.Count;
                                int ImagesPerTransition = 4;
                            }

                        </ul>
                        <div class="carousel-inner" role="listbox">

                            @if (Model.Projects?.Count > 0)
                            {

                                int modssi = Model.Projects.Count % ImagesPerTransition;
                                int iterations = 0;
                                imgleft = Model.Projects.Count;

                                if (modssi > 0)
                                {
                                    if (Model.Projects.Count > ImagesPerTransition - 1)
                                    {
                                        iterations = (int)Math.Ceiling(((double)Model.Projects.Count) / ImagesPerTransition);

                                    }
                                    else
                                    {
                                        iterations = 1;
                                    }
                                }
                                else
                                {
                                    iterations = (Model.Projects.Count) / ImagesPerTransition;
                                }
                                var active = iterations == 1 ? "active" : "";

                                for (int ssi = 0; ssi < iterations; ssi++)
                                {
                                    if (ssi == 0)
                                    {
                                        if (iterations > 1)
                                        {
                                            <div class="carousel-item active">
                                                @for (int y = 0; y < ImagesPerTransition; y++)
                                                {

                                                    @*<p>@Model.Projects[y].Name</p>*@
                                                    string imgpath = "~/" + Model.Projects[y].Image;
                                                    <a href='@Url.Action("PublicProject", "UserProfile",new { id = Model.Projects[y].Id})'>
                                                        <img src='@Url.Content(@imgpath)' />
                                                    </a>
                                                    imgleft--;
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="carousel-item active">
                                                @for (int y = 0; y < modssi; y++)
                                                {
                                                    @*<p>@Model.Projects[y].Name</p>*@
                                                    string imgpath = "~/" + Model.Projects[y].Image;
                                                    <a href='@Url.Action("PublicProject", "UserProfile",new { id = Model.Projects[y].Id})'>
                                                        <img src='@Url.Content(@imgpath)' />
                                                    </a>
                                                    imgleft--;
                                                }
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        if (imgleft >= ImagesPerTransition)
                                        {
                                            <div class="carousel-item">
                                                @for (int y = 0; y < ImagesPerTransition; y++)
                                                {
                                                    @*<p>@Model.Projects[y + ssi * ImagesPerTransition].Name</p>*@
                                                    string imgpath = "~/" + Model.Projects[y + ssi * ImagesPerTransition].Image;
                                                    <a href='@Url.Action("PublicProject", "UserProfile",new { id = Model.Projects[y + ssi * ImagesPerTransition].Id})'>
                                                        <img src='@Url.Content(@imgpath)' />
                                                    </a>

                                                    imgleft--;
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            string width = ((Math.Floor((double)(99 / modssi)))).ToString() + "%";
                                            <div class="carousel-item">

                                                @for (int y = 0; y < modssi; y++)
                                                {
                                                    @*<p>@Model.Projects[y + ssi * ImagesPerTransition].Name</p>*@
                                                    string imgpath = "~/" + Model.Projects[y + ssi * ImagesPerTransition].Image;
                                                    <a href='@Url.Action("PublicProject", "UserProfile",new { id = Model.Projects[y + ssi * ImagesPerTransition].Id})'>
                                                        <img src='@Url.Content(@imgpath)' />
                                                    </a>
                                                    imgleft--;
                                                }
                                            </div>
                                        }
                                    }
                                }
                            }

                        </div>
                        <a class="carousel-control-prev" href="#demo" data-slide="prev">
                            <span class="carousel-control-prev-icon"></span>
                        </a>
                        <a class="carousel-control-next" href="#demo" data-slide="next">
                            <span class="carousel-control-next-icon"></span>
                        </a>
                    </div>
                    <hr />
                    @Html.HiddenFor(model => model.Portfolio.Id)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Portfolio.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Portfolio.Name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Portfolio.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Portfolio.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Portfolio.Description, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Portfolio.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @*
                    @Html.LabelFor(model => model.Portfolio.PortfolioImage, htmlAttributes: new { @class = "control-label col-md-2" })
                        *@
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Portfolio.PortfolioImage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Portfolio.PortfolioImage, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.HiddenFor(model => model.Portfolio.UserId, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Portfolio.UserId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Portfolio.PrivacyDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Portfolio.PrivacyDescription, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Portfolio.PrivacyId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-12">
                        @Html.ActionLink("Back to Portfolios", "EditPortfolios", "UserProfile")
                    </div>
                </div>
            </div>
        </body>
    </html>
}
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
