@model MB.AgilePortfolio.MVCUI.ViewModels.UserProfile

@{
    ViewBag.Title = "Edit Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
            @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.Username, new { htmlAttributes = new { @class = "form-control", @id = "firstName" } })
            @Html.ValidationMessageFor(model => model.User.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "firstName" } })
            @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", @id = "lastName" } })
            @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @*
            @Html.LabelFor(model => model.User.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
        *@

        <div class="col-md-10">
            @Html.HiddenFor(model => model.User.ProfileImage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User.ProfileImage, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.User.UserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.User.UserTypeId, new SelectList(Model.UserTypes, "Id", "Description", Model.User), null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.User.UserTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" onclick="return validateRegistration()" />
        </div>
    </div>


    <div class="form-group" align="center">

        <div class="form-group">
            @Html.ActionLink("Change Password", "EditProfilePassword", "UserProfile", new { id = Model.User.Id }, new { @class = "btn btn-primary" })
            <div class="col-md-10">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Back to Profile", "Index", "UserProfile")
            </div>
        </div>

    </div>
</div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
