@model MB.AgilePortfolio.MVCUI.ViewModels.UserProfile

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Profile</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Profile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "firstName" } })
                @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control", @id = "lastName" } })
                @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.ProfileImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.ProfileImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.ProfileImage, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
                            <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", @id = "passwordInput", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="displayPasswordMsg" class="pwd-fly-out col-md-6 alert-danger alert d-none">
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            @Html.LabelFor(model => model.ConfirmPassword, "Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @id = "confirmPasswordInput", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div id="confirmPassMatchMsg" class="col-md-6 alert-danger alert d-none">
                </div>
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.User.UserTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.User.UserTypeId, new SelectList(Model.UserTypes, "Id", "Description", Model.User), null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User.UserTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Edit Projects", "EditProjects", null, null, new { @class = "btn btn-primary" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Project.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Edit Portfolios", "EditPortfolios", null, null, new { @class = "btn btn-primary" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Portfolio.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="return validateRegistration()" />
            </div>
        </div>
    </div>


}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
